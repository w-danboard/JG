{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./source/vue/observe/array.js","webpack:///./source/vue/observe/observer.js","webpack:///./source/vue/observe/index.js","webpack:///./source/vue/observe/watcher.js","webpack:///./source/vue/index.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","oldArrayProtoMethods","Array","arrayMethods","observeArray","inserted","length","observe","defineReactive","data","newValue","forEach","method","args","apply","this","slice","isArray","__proto__","walk","keys","initState","vm","opts","$options","_data","proxy","initData","computed","watch","source","exprOrFn","cb","Vue","options","_init","el","$mount","defaultRE","util","getValue","expr","split","reduce","memo","current","console","log","node","textContent","replace","_update","firstChild","$el","document","createDocumentFragment","appendChild","childNodes","child","nodeType","compilerText","compiler","querySelector","query","msg","school","age","arr","a"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// 主要要做的事就是拦截用户调用的push shift unshift pop reverse sort splice (为什么要监听这几个方法？因为这些方法会导致原数组发生变化)\n\nimport { observe } from \"./index\";\n\n// concat... 不会改变原数组 所以不需要监听他们\n\n// 先获取老的数组方法 之改写这7个方法\nlet oldArrayProtoMethods = Array.prototype; // 不可以直接改这个方法 因为直接改回导致其他调这些方法都会用改写之后的\n\n// 拷贝的一个新的对象 可以直接查找到 老的方法\nexport let arrayMethods = Object.create(oldArrayProtoMethods);\n\n// 原型链 prototype __proto__\nlet methods = [\n  'push',\n  'shift',\n  'pop',\n  'unshift',\n  'reverse',\n  'sort',\n  'splice'\n];\n\nexport function observeArray(inserted) { // 要循环数组 依次对数组中每一项进行观察\n  for(let i = 0; i < inserted.length; i++) {\n    observe(inserted[i]);\n  }\n}\n\nmethods.forEach(method => {\n  arrayMethods[method] = function(...args) {\n    let r = oldArrayProtoMethods[method].apply(this, args);\n    // todo\n    let inserted;\n    switch(method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2); // 获取splice 新增的内容\n      default:\n        break;\n    }\n    if(inserted) observeArray(inserted);\n    return r;\n  }\n})","import { observe } from './index';\nimport { arrayMethods, observeArray } from './array';\nexport function defineReactive(data, key, value) {  // 定义响应式的数据变化\n  // vue 不支持ie8 及 ie8 以下的浏览器\n  // 如果value依旧是一个对象的话 需要深度观察\n  observe(value)  // 递归观察 {} arr[1, 2, 3]\n  Object.defineProperty(data, key, {\n    get() {\n      return value;\n    },\n    set(newValue) {\n      observe(newValue) // 如果你设置的值是一个对象，那应该对这个对象进行监控\n      if (newValue !== value) {\n        value = newValue;\n      }\n    }\n  })\n};\n\nclass Observer {\n  constructor (data) {  // data 就是我们刚才定义的vm._data\n    // 将用户的数据使用 defineProperty重新定义\n    if (Array.isArray(data)) {  // 我需要重写push方法等\n      // 只能拦截数组的方法 数组里的每一项 还需要去观测一下\n      data.__proto__ = arrayMethods;  // 让数组 通过链来查找我们自己编写的原型\n      observeArray(data); // 观测数据中的每一项\n    } else {\n      this.walk(data);\n    }\n  }\n  walk(data) {\n    let keys = Object.keys(data);\n    for (let i = 0; i < keys.length; i++) {\n      let key = keys[i];  // 用户传入的key\n      let value = data[key]; // 用户传入的值\n      defineReactive(data, key, value);\n    }\n  }\n}\n\nexport default Observer;","// 响应式的入口文件\nimport Observer from './observer';\nexport function initState(vm) {\n  // 做不同的初始化工作\n  let opts = vm.$options;\n  if(opts.data) {\n    initData(vm); // 初始化数据\n  }\n  if(opts.computed) {\n    initComputed(); // 初始化计算属性\n  }\n  if(opts.watch) {\n    initWatch();  // 初始化watch\n  }\n}\n\nexport function observe(data) {\n  if(typeof data !== 'object' || data == null) {\n    return // 不是对象或者是null 我就不用执行后续逻辑了\n  }\n  return new Observer(data)\n}\n\nfunction proxy(vm, source, key) { // 代理数据 vm.msg = vm_data.msg\n  // vm.msg = 'hello' === vm._data.msg = 'hello'\n  Object.defineProperty(vm, key, {\n    get() {\n      return vm[source][key]\n    },\n    set(newValue) {\n      vm[source][key] = newValue;\n    }\n  })\n}\n\nfunction initData(vm) { // 将用户传入的数据 通过object.defineProperty重新定义\n  let data = vm.$options.data; // 用户传入的data\n  data = vm._data = typeof data === 'function' ? data.call(vm) : data || {};\n\n  for (let key in data) {\n    proxy(vm, '_data', key) // 会将对vm上的取值操作和赋值操作代理vm._data属性\n  }\n\n  observe(vm._data);\n}\n\nfunction initComputed() {\n\n}\nfunction initWatch() {\n\n}","class Watcher { // 每次产生一个watcher 都要有一个唯一的标识\n  /**\n   * \n   * @param {*} vm 当前组件的实例 new Vue\n   * @param {*} exprOrFn 用户可能传入的是一个表达式 也有可能传入的是一个函数\n   * @param {*} cb 用户传入的回调函数 vm.$watch('msg', cb)\n   * @param {*} opts // 一些其它参数\n   */\n  constructor(vm, exprOrFn, cb, opts) {\n    this.vm = vm;\n    this.exprOrFn = exprOrFn;\n    if(typeof exprOrFn === 'function') {\n      this.getter = exprOrFn; // getter就是new Watcher传入的第二个函数\n    }\n    this.cb = cb;\n    this.opts = opts;\n    // this.id = id++;\n\n    this.get(); // 默认创建一个watcher 会调用自身的get方法\n  }\n  get() {\n    this.getter(); // 让这个当前传入的函数执行\n  }\n}\n// 渲染使用他 计算属性也要用他 vm.watch也用他\nexport default Watcher;","import { initState } from './observe';\nimport Watcher from './observe/watcher';\n\nfunction Vue(options) { // vue中原始用户传入的数据\n  this._init(options);  // 初始化vue 并且将用户选项传入\n};\n\nVue.prototype._init = function(options) {\n  // vue中的初始化 this.$options  表示的是vue中参数\n  let vm = this;\n  vm.$options = options;\n\n  // MVVM原理 需要数据重新初始化\n  // 拦截数组的方法和对象的属性\n  initState(vm); // data computed watch\n  // ...\n\n  // 初始化工作  vue1.0 =>\n  if(vm.$options.el) {\n    vm.$mount();\n  }\n}\n\n// 渲染页面 将组件进行挂载\nfunction query(el) {\n  if(typeof el === 'string') {\n    return document.querySelector(el);\n  }\n  return el;\n}\n// ?: 匹配不捕获 不捕获当前的分组\n// + 至少一个\n// ? 尽可能少匹配\n// 源码里的模板编译 也是基于正则的\nconst defaultRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\nconst util = {\n  getValue(vm, expr) {  // scholl.name\n    let keys = expr.split('.');\n    return keys.reduce((memo, current) => {\n      memo = memo[current];\n      console.log('memo---', memo)\n      return memo;\n    }, vm)\n  },\n  compilerText(node, vm) {  // 编译文本 替换{{}}\n    node.textContent = node.textContent.replace(defaultRE, function(...args) {\n      console.log('util.getValue(vm, args[1])', util.getValue(vm, args[1]))\n      return util.getValue(vm, args[1])\n    })\n  }\n}\nfunction compiler(node, vm) { // node是文档碎片\n  let childNodes = node.childNodes; // 只有第一层 只有儿子 没有孙子\n  // 将类数组转化成数组\n  [...childNodes].forEach(child => {  // 一种元素 一种文本\n    if(child.nodeType == 1) { // 1元素 3文本\n\n    } else if(child.nodeType == 3) {\n      util.compilerText(child, vm);\n    }\n  })\n}\nVue.prototype._update = function() {\n  //用户传入的数据 去更新视图\n  let vm = this;\n  let el = vm.$el;\n  \n  // ---------------- 以下逻辑 讲完会用虚拟DOM重新写\n  // 要循环这个元素 将里面的内容 换成我们的数据\n\n  let node = document.createDocumentFragment();\n  let firstChild;\n  while(firstChild = el.firstChild) { // 每次拿到第一个元素 就将这个元素放入到文档锁片中\n    node.appendChild(firstChild)  // appendChild 是具有移动的功能\n  }\n  compiler(node, vm);\n  el.appendChild(node);\n  // 需要匹配{{}}的方式来进行替换\n}\nVue.prototype.$mount = function() {\n  let vm = this;\n  let el = vm.$options.el; // 获取元素  #app\n  el = vm.$el =  query(el); // 获取当前挂载的节点 vm.$el就是我要挂载的一个元素\n\n  // 渲染是通过watcher来渲染的\n  // 渲染watcher 用于渲染的watcher\n  // vue2.0 组件级别更新  new Vue 产生一个组件\n\n  let updateComponent = () => { // 更新组件、渲染的逻辑\n    vm._update(); // 更新组件\n  }\n  new Watcher(vm, updateComponent); // 渲染watcher 默认会调用updateComponent这个方法\n  \n}\nexport default Vue;","import Vue from 'vue';  // 会默认先查找source 目录下的vue文件夹\n\n// es6类 构造函数 es5的类 (源码里用了es5的构造函数)\n// 为什么用es5的构造函数\n\nlet vm = new Vue({\n  el: '#app', // 表示要渲染的元素是app\n  data() {\n    return {\n      msg: 'hello',\n      school: {\n        name: 'zf',\n        age: 18\n      },\n      arr: [{a: 1}, 1, 2, 3]\n    }\n  },\n  computed: {\n\n  },\n  watch: {\n\n  }\n})\n// vm.msg = vm._data.msg  // 代理\n\n// 怎么能监听到数组? 答: 就是对原生的方法进行劫持\n// 如果新增的属性 也是对象类型 我们要对新增的对象也进行观察\nconsole.log(vm.arr[0]['a'] = 100)\n\n// 什么样的数组会被观测 [0, 1, 2] observe 不能直接改变索引 不能被检测到\n// [1, 2, 3].length-- 因为数组的长度变化 我们没有检测\n// [{a: 1}] 内部会对数组里的对象进行观察\n\n// [].push shift unshift 这些方法可以被监控 vm.$set 内铺调用的就是数组的splice方法"],"sourceRoot":""}